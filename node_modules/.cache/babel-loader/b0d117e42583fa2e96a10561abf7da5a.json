{"ast":null,"code":"var _jsxFileName = \"/Users/jiahao/Documents/web-dev/personal-projects/codecoach/src/components/MainComponent.js\";\nimport React, { Component } from 'react';\nimport Menu from './MenuComponent';\nimport DishDetail from './DishdetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    dishes: state.dishes,\n    comments: state.comments,\n    promotions: state.promotions,\n    leaders: state.leaders\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n  fetchDishes: () => {\n    dispatch(fetchDishes());\n  },\n  resetFeedbackForm: () => {\n    dispatch(actions.reset('feedback'));\n  },\n  fetchComments: () => dispatch(fetchComments()),\n  fetchPromos: () => dispatch(fetchPromos()),\n  fetchLeaders: () => dispatch(fetchLeaders()),\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message))\n});\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.fetchDishes();\n    this.props.fetchComments();\n    this.props.fetchPromos();\n    this.props.fetchLeaders();\n  }\n\n  render() {\n    const HomePage = () => {\n      return /*#__PURE__*/_jsxDEV(Home, {\n        dish: this.props.dishes.dishes.filter(dish => dish.featured)[0],\n        dishesLoading: this.props.dishes.isLoading,\n        dishesErrMess: this.props.dishes.errMess,\n        promotion: this.props.promotions.promotions.filter(promo => promo.featured)[0],\n        promoLoading: this.props.promotions.isLoading,\n        promoErrMess: this.props.promotions.errMess,\n        leader: this.props.leaders.leaders.filter(leader => leader.featured)[0],\n        leaderLoading: this.props.leaders.isLoading,\n        leaderErrMess: this.props.leaders.errMess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    };\n\n    const DishWithId = ({\n      match\n    }) => {\n      return /*#__PURE__*/_jsxDEV(DishDetail, {\n        dish: this.props.dishes.dishes.filter(dish => dish.id === parseInt(match.params.dishId, 10))[0],\n        isLoading: this.props.dishes.isLoading,\n        errMess: this.props.dishes.errMess,\n        comments: this.props.comments.comments.filter(comment => comment.dishId === parseInt(match.params.dishId, 10)),\n        commentsErrMess: this.props.comments.errMess,\n        postComment: this.props.postComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          component: HomePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/aboutus\",\n          component: () => /*#__PURE__*/_jsxDEV(About, {\n            leaders: this.props.leaders\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/menu\",\n          component: () => /*#__PURE__*/_jsxDEV(Menu, {\n            dishes: this.props.dishes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 72\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/menu/:dishId\",\n          component: DishWithId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/contactus\",\n          component: () => /*#__PURE__*/_jsxDEV(Contact, {\n            resetFeedbackForm: this.props.resetFeedbackForm,\n            postFeedback: this.props.postFeedback\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 77\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","map":{"version":3,"sources":["/Users/jiahao/Documents/web-dev/personal-projects/codecoach/src/components/MainComponent.js"],"names":["React","Component","Menu","DishDetail","Header","Footer","Home","Contact","About","Switch","Route","Redirect","withRouter","connect","fetchDishes","fetchComments","fetchPromos","fetchLeaders","postFeedback","actions","mapStateToProps","state","dishes","comments","promotions","leaders","mapDispatchToProps","dispatch","postComment","dishId","rating","author","comment","resetFeedbackForm","reset","firstname","lastname","telnum","email","agree","contactType","message","Main","constructor","props","componentDidMount","render","HomePage","filter","dish","featured","isLoading","errMess","promo","leader","DishWithId","match","id","parseInt","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Menu from './MenuComponent';\nimport DishDetail from './DishdetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport {  fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\n\n\n\n\n\nconst mapStateToProps = state => {\n    return {\n        dishes: state.dishes,\n        comments: state.comments,\n        promotions: state.promotions,\n        leaders: state.leaders\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n    fetchDishes: () => { dispatch(fetchDishes())},\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n    fetchComments: () => dispatch(fetchComments()),\n    fetchPromos: () => dispatch(fetchPromos()),\n    fetchLeaders: () => dispatch(fetchLeaders()),\n    postFeedback: (firstname, lastname, telnum, email, agree, contactType, message)=> dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message))\n  });\n\nclass Main extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        this.props.fetchDishes();\n        this.props.fetchComments();\n        this.props.fetchPromos();\n        this.props.fetchLeaders();\n    }\n\n    render() {\n        const HomePage = () => {\n            return (\n                <Home\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n                    dishesLoading={this.props.dishes.isLoading}\n                    dishesErrMess={this.props.dishes.errMess}\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                    promoLoading={this.props.promotions.isLoading}\n                    promoErrMess={this.props.promotions.errMess}\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n                    leaderLoading={this.props.leaders.isLoading}\n                    leaderErrMess={this.props.leaders.errMess}\n                />\n            );\n        }\n\n        const DishWithId = ({ match }) => {\n            return (\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\n                    isLoading={this.props.dishes.isLoading}\n                    errMess={this.props.dishes.errMess}\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\n                    commentsErrMess={this.props.comments.errMess}\n                    postComment={this.props.postComment}\n                />\n            );\n        };\n        return (\n            <div>\n                <Header />\n              \n                        <Switch>\n                            <Route path='/home' component={HomePage} />\n                            <Route path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n                            <Route path='/menu/:dishId' component={DishWithId} />\n                            <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>} />\n                            <Redirect to='/home' />\n                        </Switch>\n                    \n                \n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));"]},"metadata":{},"sourceType":"module"}