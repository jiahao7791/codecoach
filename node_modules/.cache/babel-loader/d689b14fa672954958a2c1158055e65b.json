{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\nexport const addComment = (dishId, rating, author, comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: {\n    dishId: dishId,\n    rating: rating,\n    author: author,\n    comment: comment\n  }\n});\nexport const fetchDishes = () => dispatch => {\n  dispatch(dishesLoading(true));\n  setTimeout(() => {\n    dispatch(addDishes(DISHES));\n  }, 2000);\n};\nexport const dishesLoading = () => ({\n  type: ActionTypes.DISHES_LOADING\n});\nexport const dishesFailed = errmess => ({\n  type: ActionTypes.DISHES_FAILED,\n  payload: errmess\n});\nexport const addDishes = dishes => ({\n  type: ActionTypes.ADD_DISHES,\n  payload: dishes\n});\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + 'comments').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(comments => dispatch(addComments(comments))).catch(error => dispatch(commentsFailed(error.message)));\n};\nexport const commentsFailed = errmess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const fetchPromos = () => dispatch => {\n  dispatch(promosLoading());\n  return fetch(baseUrl + 'promotions').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(promos => dispatch(addPromos(promos))).catch(error => dispatch(promosFailed(error.message)));\n};\nexport const promosLoading = () => ({\n  type: ActionTypes.PROMOS_LOADING\n});\nexport const promosFailed = errmess => ({\n  type: ActionTypes.PROMOS_FAILED,\n  payload: errmess\n});\nexport const addPromos = promos => ({\n  type: ActionTypes.ADD_PROMOS,\n  payload: promos\n});\nexport const fetchLeaders = () => dispatch => {\n  dispatch(leadersLoading());\n  return fetch(baseUrl + 'leaders').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    var errmess = new Error(error.message);\n    throw errmess;\n  }).then(response => response.json()).then(leaders => dispatch(addLeaders(leaders))).catch(error => dispatch(leadersFailed(error.message)));\n};\nexport const leadersLoading = () => ({\n  type: ActionTypes.LEADERS_LOADING\n});\nexport const leadersFailed = errmess => ({\n  type: ActionTypes.LEADERS_FAILED,\n  payload: errmess\n});\nexport const addLeaders = promos => ({\n  type: ActionTypes.ADD_LEADERS,\n  payload: promos\n}); //postFeedback\n\nexport const addFeedback = feedback => ({\n  type: ActionTypes.ADD_FEEDBACK,\n  payload: feedback\n});\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => dispatch => {\n  const newFeedback = {\n    firstname: firstname,\n    lastname: lastname,\n    telnum: telnum,\n    email: email,\n    agree: agree,\n    contactType: contactType,\n    message: message\n  }; //alert(firstname+\" \"+lastname+\" \"+telnum+\" \"+email+\" \"+message);\n\n  newFeedback.date = new Date().toISOString();\n  return fetch(baseUrl + 'feedback', {\n    method: \"POST\",\n    body: JSON.stringify(newFeedback),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    credentials: \"same-origin\"\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => {\n    response.json();\n    alert('Your feedback has been submitted.');\n  }).then(response => {\n    dispatch(addFeedback(response));\n  }).catch(error => {\n    console.log('post feedback', error.message);\n    alert('Your feedback could not be posted\\nError: ' + error.message);\n  });\n};","map":{"version":3,"sources":["/Users/jiahao/Documents/web-dev/personal-projects/codecoach/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","addComment","dishId","rating","author","comment","type","ADD_COMMENT","payload","fetchDishes","dispatch","dishesLoading","setTimeout","addDishes","DISHES","DISHES_LOADING","dishesFailed","errmess","DISHES_FAILED","dishes","ADD_DISHES","fetchComments","fetch","then","response","ok","error","Error","status","statusText","message","json","comments","addComments","catch","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromos","promosLoading","promos","addPromos","promosFailed","PROMOS_LOADING","PROMOS_FAILED","ADD_PROMOS","fetchLeaders","leadersLoading","leaders","addLeaders","leadersFailed","LEADERS_LOADING","LEADERS_FAILED","ADD_LEADERS","addFeedback","feedback","ADD_FEEDBACK","postFeedback","firstname","lastname","telnum","email","agree","contactType","newFeedback","date","Date","toISOString","method","body","JSON","stringify","headers","credentials","alert","console","log"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes'\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (dishId, rating, author, comment) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: {\n      dishId: dishId,\n      rating: rating,\n      author: author,\n      comment: comment\n  }\n});\n\nexport const fetchDishes = () => (dispatch) => {\n\n  dispatch(dishesLoading(true));\n\n  setTimeout(() => {\n      dispatch(addDishes(DISHES));\n  }, 2000);\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\n\n\nexport const fetchComments = () => (dispatch) => {    \n    return fetch(baseUrl + 'comments')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(comments => dispatch(addComments(comments)))\n    .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n    \n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(promos => dispatch(addPromos(promos)))\n    .catch(error => dispatch(promosFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\n\n\n\n\n\nexport const fetchLeaders = () => (dispatch) => {\n    \n    dispatch(leadersLoading());\n\n    return fetch(baseUrl + 'leaders')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(leaders => dispatch(addLeaders(leaders)))\n    .catch(error => dispatch(leadersFailed(error.message)));\n}\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (promos) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: promos\n});\n\n\n\n//postFeedback\nexport const addFeedback = ( feedback ) =>({\n    type: ActionTypes.ADD_FEEDBACK,\n    payload: feedback\n\n});\n\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\n\n    const newFeedback = {\n        firstname: firstname,\n        lastname: lastname,\n        telnum: telnum,\n        email: email,\n        agree: agree,\n        contactType: contactType,\n        message: message\n    };\n\n    //alert(firstname+\" \"+lastname+\" \"+telnum+\" \"+email+\" \"+message);\n    newFeedback.date = new Date().toISOString();\n\n    \n    return fetch(baseUrl + 'feedback', {\n        method: \"POST\",\n        body: JSON.stringify(newFeedback),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n        if (response.ok) {\n      \n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            throw error;\n      })\n    .then(response => {response.json();    alert('Your feedback has been submitted.');})\n    .then( response => {dispatch(addFeedback(response)); })\n    .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\n};"]},"metadata":{},"sourceType":"module"}