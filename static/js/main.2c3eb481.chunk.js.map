{"version":3,"sources":["components/HeaderComponent.js","components/FooterComponent.js","components/LoadingComponent.js","components/CourseComponent.js","components/HomeComponent.js","components/AboutComponent.js","components/ContactComponent.js","components/CoursedetailComponent.js","redux/ActionTypes.js","firebase/firebase.js","firebase/config.js","redux/ActionCreators.js","components/MainComponent.js","redux/courses.js","redux/teachers.js","redux/forms.js","redux/comments.js","redux/bookSlot.js","redux/auth.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Header","props","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","handleGoogleLogin","handleLogout","event","this","loginUser","username","value","password","preventDefault","googleLogin","setState","logoutUser","light","expand","className","onClick","href","isOpen","navbar","to","auth","isAuthenticated","user","displayName","outline","isFetching","toggle","onSubmit","htmlFor","type","id","name","innerRef","input","check","remember","color","Component","Footer","Loading","RenderCourseItem","course","console","log","image","_id","width","src","alt","price","Course","courses","map","isLoading","errMess","active","RenderCard","item","description","Home","courseLoading","courseErrMess","About","RenderLeader","teacher","designation","teachers","title","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","alert","postFeedback","resetFeedbackForm","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","CommentForm","postComment","courseId","rating","comment","selected","RenderCourse","RenderComments","comments","commentsErrMess","author","firstname","lastname","Intl","DateTimeFormat","year","month","day","format","Date","parse","updatedAt","toDate","CourseDetail","postBookSlot","resetBookSlotForm","telnum","email","message","ADD_COURSES","COURSES_LOADING","COURSES_FAILED","ADD_TEACHERS","TEACHERS_LOADING","TEACHERS_FAILED","ADD_COMMENTS","COMMENTS_FAILED","ADD_COMMENT","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","firebase","initializeApp","databaseURL","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","fireauth","firestore","settings","timestampsInSnapshots","firebasestore","coursesLoading","ActionTypes","coursesFailed","errmess","payload","addCourses","teachersLoading","teachersFailed","addTeachers","commentsFailed","addComments","dispatch","currentUser","collection","add","uid","createdAt","FieldValue","serverTimestamp","then","docRef","doc","get","exists","data","addComment","catch","error","receiveLogin","loginError","creds","signInWithEmailAndPassword","localStorage","setItem","JSON","stringify","signOut","removeItem","Main","fetchCourses","fetchTeachers","fetchComments","path","component","filter","featured","exact","match","params","withRouter","connect","snapshot","forEach","push","actions","reset","feedback","response","bookSlot","provider","GoogleAuthProvider","signInWithPopup","result","Courses","action","Teachers","InitialFeedback","agree","contactType","Comments","concat","InitialBookSlot","Auth","token","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c3eb481.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\n    Button, Modal, ModalHeader, ModalBody,\n    Form, FormGroup, Input, Label } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n    \n       \n        this.state = {\n          isNavOpen: false,\n          isModalOpen:false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.handleGoogleLogin = this.handleGoogleLogin.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n    handleLogin(event) {\n        this.toggleModal();\n        this.props.loginUser({username: this.username.value, password: this.password.value});\n        event.preventDefault();\n\n    }\n\n    handleGoogleLogin(event) {\n        this.toggleModal();\n        this.props.googleLogin();\n        event.preventDefault();\n    }\n\n    toggleNav() {\n        this.setState({\n        isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal(){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n    handleLogout() {\n        this.props.logoutUser();\n    }\n\n    render() {\n        return(\n            <div>\n                <Navbar light expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler className=\"navbar-toggler\" onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"></NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\"  to='/home' onClick={this.toggleNav}><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/aboutus' onClick={this.toggleNav}><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\"  to='/courses' onClick={this.toggleNav}><span className=\"fa fa-list fa-lg\"></span> Courses</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/contactus' onClick={this.toggleNav}><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    { !this.props.auth.isAuthenticated ?\n                                        <Button outline onClick={this.toggleModal}>\n                                            <span className=\"fa fa-sign-in fa-lg\"></span> Login\n                                            {this.props.auth.isFetching ?\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                                                : null\n                                            }\n                                        </Button>\n                                        :\n                                        <div>\n                                        <div className=\"navbar-text mr-3\">{this.props.auth.user.displayName}</div>\n                                        <Button outline onClick={this.handleLogout}>\n                                            <span className=\"fa fa-sign-out fa-lg\"></span> Logout\n                                            {this.props.auth.isFetching ?\n                                                <span className=\"fa fa-spinner fa-pulse fa-fw\"></span>\n                                                : null\n                                            }\n                                        </Button>\n                                        </div>\n                                    }\n\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Code Coach</h1>\n                                <p>The place to learn coding.</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                    innerRef={(input) => this.remember = input}  />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                        <Button color=\"danger\" onClick={this.handleGoogleLogin}><span className=\"fa fa-google fa-lg\"></span> Login with Google</Button>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return(\n    <div className=\"footer\">\n        <div className=\"container\">\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-4 offset-1 col-sm-2\">\n                    <h5>Links</h5>\n                    <ul className=\"list-unstyled\">\n                        <li><Link to='/home'>Home</Link></li>\n                        <li><Link to='/aboutus'>About Us</Link></li>\n                        <li><Link to='/courses'>Menu</Link></li>\n                        <li><Link to='/contactus'>Contact Us</Link></li>\n                    </ul>\n                </div>\n                <div className=\"col-7 col-sm-5\">\n                    <h5>Our Address</h5>\n                    <address>\n\t\t              121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                         confusion@food.net</a>\n                    </address>\n                </div>\n                <div className=\"col-12 col-sm-4 align-self-center\">\n                    <div className=\"text-center\">\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">             \n                <div className=\"col-auto\">\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","import React, { Component } from 'react';\nimport {\n  Card, CardImg, CardImgOverlay,\n  CardTitle, Breadcrumb, BreadcrumbItem, CardSubtitle\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\n\n\nfunction RenderCourseItem({ course }) {\n  console.log(course.image);\n  return (\n    <Card>\n      <Link to={`/courses/${course._id}`} >\n        <CardImg width=\"100%\" className=\"my_image \" src={course.image} alt={course.name} />\n        <CardImgOverlay>\n          <CardTitle>{course.name}</CardTitle>\n          <CardSubtitle>{course.price}</CardSubtitle>\n        </CardImgOverlay>\n      </Link>\n    </Card>\n  );\n}\n\n\nconst Course = (props) => {\n  const course = props.courses.courses.map((course) => {\n    return (\n      <div key={course._id} className=\"col-12 col-md-5 m-1 mb-5\">\n        <RenderCourseItem course={course} />\n      </div>\n    );\n  });\n\n  if (props.courses.isLoading) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Loading />\n        </div>\n      </div>\n    );\n  }\n  else if (props.courses.errMess) {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <h4>{props.courses.errMess}</h4>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  else return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <Breadcrumb>\n          <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n          <BreadcrumbItem active>Courses</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"col-12\">\n          <h3>Courses</h3>\n         \n          <hr />\n        </div>\n      </div>\n      <div >\n        <h4>Click below to book your slot!</h4>\n      </div>\n      <div className=\"row row-content\">\n       \n        {course}\n      </div>\n    </div>\n  );\n\n}\nexport default Course;","import React from 'react';\nimport { Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle} from 'reactstrap';\nimport {Loading} from './LoadingComponent';\n\nfunction RenderCard({item,isLoading,errMess }) {\n    if (isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\"> \n                    <div className=\"col-12\">\n                        <h4>{errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else return(\n        <Card>\n            <CardImg src={item.image} alt={item.name} />\n            <CardBody>\n            <CardTitle>{item.name}</CardTitle>\n            <CardSubtitle>{item.price}</CardSubtitle>\n            <CardText>{item.description}</CardText>\n            </CardBody>\n        </Card>\n    );\n\n}\n\nfunction Home(props) {\n     return(\n        <div className=\"container\">\n            <div className=\"row align-items-start row-content\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.course[0]} isLoading={props.courseLoading} errMess={props.courseErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                <RenderCard item={props.course[1]} isLoading={props.courseLoading} errMess={props.courseErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                <RenderCard item={props.course[2]} isLoading={props.courseLoading} errMess={props.courseErrMess} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React from 'react';\nimport { CardImg, CardTitle, CardSubtitle, Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {Loading} from './LoadingComponent'\n\n\n\nfunction About(props) {\n\n    function RenderLeader({ teacher }) {\n        return (\n                <Card className=\"card_colour mb-5 text-center\">\n                    <CardImg className=\"my_image \" width=\"100%\" src={teacher.image} alt={teacher.name} />\n                    <CardTitle className=\"text-center\">{teacher.name}</CardTitle>\n                    <CardTitle className=\"text-center\">{teacher.designation}</CardTitle>\n                    <CardSubtitle className=\"text-center\">{teacher.description}</CardSubtitle>\n                </Card>\n\n        );\n    }\n\n\n    const teachers = props.teachers.teachers.map((teacher) => {\n        return (\n            <div className=\"col-12 col-lg-6 text-center\">\n                <RenderLeader teacher={teacher} />\n            </div>\n\n        );\n    });\n    if (props.teachers.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.teachers.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h4>{props.teachers.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    else\n\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>About Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12 col-md-6\">\n                        <h2>Our Mission</h2>\n                        <h5>We aim to impart Computer Science knowledge to people because of how important it will become in the future.</h5>\n                        <br></br>\n                        <h5>Why <strong>Code Coach</strong>?  Simply because we offer affordable, personalised and convenient lessons taught by only the best in the industry.</h5>\n                    </div>\n                    <div className=\"col-12 col-md-5\">\n                        <Card>\n                            <CardHeader className=\"bg-primary text-white\">Facts about Code Coach</CardHeader>\n                            <CardBody>\n                                <dl className=\"row p-1\">\n                                    <dt className=\"col-6\">Started</dt>\n                                    <dd className=\"col-6\">3 Feb. 2020</dd>\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\n                                    <dd className=\"col-6\">Barney Stinson</dd>\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\n                                    <dd className=\"col-6\">$1,250,375</dd>\n                                    <dt className=\"col-6\">Employees</dt>\n                                    <dd className=\"col-6\">4</dd>\n                                </dl>\n                            </CardBody>\n                        </Card>\n                    </div>\n                    <div className=\"col-12 mt-5\">\n                        <Card>\n                            <CardBody className=\"bg-faded\">\n                                <blockquote className=\"blockquote\">\n                                    <p className=\"mb-0\">\"Never Hate Your Enemies. It Affects Your Judgment.\"</p>\n                                    <footer className=\"blockquote-footer\">Michael Corleone,\n                                <cite title=\"Source Title\">The Godfather</cite>\n                                    </footer>\n                                </blockquote>\n                            </CardBody>\n                        </Card>\n                    </div>\n                </div>\n                <div className=\"col-12\">\n                    <h2>Star tutors</h2>\n                </div>\n                <div className=\"row row-content\">\n                    \n\n                    {teachers}\n\n                </div>\n                \n            </div>\n        );\n}\n\nexport default About;","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem,\n    Button, Row, Col, Label } from 'reactstrap';\nimport { Control, Form, Errors, actions } from 'react-redux-form';\nimport { Link } from 'react-router-dom';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n     \n        this.handleSubmit = this.handleSubmit.bind(this);\n        \n    }\n\n\n    handleSubmit(values) {\n        //console.log('Current State is: ' + JSON.stringify(values));\n        alert('Your feedback has been submitted. ')\n        this.props.postFeedback(values);\n        this.props.resetFeedbackForm();\n    }\n\n    render(){\n      \n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>                \n                </div>\n                <div className=\"row row-content\">\n                    <div className = \"col-sm-6 align-self-center\">\n                        <h1>Freelance Work</h1>\n                        <h4>Do you have any project or work you need help with? </h4>\n                        <h5>If so, look no further! Here at Code Coach, we offer high quality freelance service at <strong>extremely affordable</strong> rates.</h5>\n                        <h5>Fill in the form below to get your quotes today!</h5>\n                \n                    </div>\n                    <div className = \"col-sm-5 align-self-center\">\n                        <img src=\"/codecoach/assets/images/competitive.jpg\" className = \"img-fit\"/>\n                    </div>\n\n\n                </div>\n\n                <div className=\"row row-content\">\n                   <div className=\"col-12\">\n                      <h3>Send us your request</h3>\n                   </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values)=>this.handleSubmit(values)}>\n                            <Row className=\"form-group\" >\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                        />\n\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            minLength: 'Must be greater than 2 characters. ',\n                                            maxLength: 'Must be 15 characters or less. '\n                                        }}\n                                     />\n                                     \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                        />\n\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            minLength: 'Must be greater than 2 characters. ',\n                                            maxLength: 'Must be 15 characters or less. '\n                                        }}\n                                     />         \n                                      \n                                </Col>                        \n                            </Row>\n                            <Row className=\"form-group\">\n                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15),isNumber\n                                        }}\n                                         />\n                                         <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            minLength: 'Must be greater than 2 numbers. ',\n                                            maxLength: 'Must be 15 numbers or less. ',\n                                            isNumber: 'Must be numbers only. '\n                                        }}\n                                     /> \n                                      \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                        />\n\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required. ',\n                                            validEmail: 'Must be valid email. '\n                                        }}\n                                     /> \n                                      \n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 6, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                                 /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{size: 3, offset: 1}}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                           className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\"/>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n               </div>\n            </div>\n        );\n    }\n    \n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport {\n    Card, CardBody, CardText, CardImg,\n    CardTitle, Breadcrumb, BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label, Row, Col\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { Control, LocalForm,Form, Errors, actions } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass CommentForm extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        \n        this.state = {\n          isNavOpen: false,\n          isModalOpen: false\n        };\n    }\n\n    toggleModal() {\n        this.setState({\n          isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.courseId, values.rating, values.comment);\n    }\n\n    render() {\n        return(\n        <div>\n            <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n            <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n            <ModalBody>\n                <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\n                    <Row className=\"form-group\">\n                        <Col>\n                        <Label htmlFor=\"rating\">Rating</Label>\n                        <Control.select model=\".rating\" id=\"rating\" className=\"form-control\">\n                            <option selected>1</option>\n                            <option>2</option>\n                            <option>3</option>\n                            <option>4</option>\n                            <option>5</option>\n                        </Control.select>\n                        </Col>\n                    </Row>\n                    <Row className=\"form-group\">\n                        <Col>\n                        <Label htmlFor=\"comment\">Comment</Label>\n                        <Control.textarea model=\".comment\" id=\"comment\"\n                                    rows=\"6\" className=\"form-control\" />\n                        </Col>\n                    </Row>\n                    <Button type=\"submit\" className=\"bg-primary\">\n                        Submit\n                    </Button>\n                </LocalForm>\n            </ModalBody>\n           </Modal>\n        </div>\n        );\n    }\n\n}\nfunction RenderCourse({ course }) {\n    if (course != null) {\n        console.log(course.image);\n        return (\n            <Card>\n                <CardImg width=\"100%\" src={course.image} alt={course.name} />\n                <CardBody>\n                    <CardTitle>{course.name}</CardTitle>\n                    <CardText>{course.description}</CardText>\n                </CardBody>\n            </Card>\n        );\n       \n    }\n    else {\n        return (\n            <div> </div>\n        );\n    }\n}\nfunction RenderComments({ comments,  commentsErrMess, postComment,courseId }) {\n    if (commentsErrMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{commentsErrMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (comments != null) {\n        console.log(\"OK COMMENTS\");\n        console.log(comments);\n        const item = comments.map((comment) => {\n            return (\n                <li>\n                <p>{comment.comment}</p>\n                <p>{comment.rating} stars</p>\n                <p>-- {comment.author.firstname} {comment.author.lastname} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day:'2-digit'}).format(new Date(Date.parse(comment.updatedAt.toDate())))}</p>\n                </li>\n            );\n        });\n        return (\n            <div>\n                <h4>\n                    Comments\n                </h4>\n\n                <ul className=\"list-unstyled\">\n                    {item}\n                </ul>\n                <CommentForm courseId={courseId} postComment={postComment} />\n\n            </div>\n\n\n        )\n    }\n    else {\n        return (\n            <div></div>\n        )\n    }\n}\nclass CourseDetail extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isModalOpen: false\n        }\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleSubmit.bind(this);\n    }\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n\n    }\n\n    handleSubmit(values) {\n        //alert('Your request has been submitted . ');\n        console.log(\"OK REACHED HERE\");\n        console.log(values);\n        /*this.props.postBookSlot({\n            name:this.name.value,\n            telnum: this.telnum.value,\n            email: this.email.value,\n            message:this.message.value\n        });*/\n        this.props.postBookSlot(values);\n        this.props.resetBookSlotForm();\n        this.setState({ \n            isModalOpen: false \n        });\n        \n    }\n    render() {\n        if (this.props.isLoading) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Loading />\n                    </div>\n                </div>\n            );\n        }\n        else if (this.props.errMess) {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <h4>{this.props.errMess}</h4>\n                    </div>\n                </div>\n            );\n        }\n        else {\n            return (\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Breadcrumb>\n\n                            <BreadcrumbItem><Link to=\"/courses\">Courses</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{this.props.course.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <div className=\"col-12\">\n                            <h3>{this.props.course.name}</h3>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-4 m-1\">\n                            <RenderCourse course={this.props.course} />\n                        </div>\n                        <div className=\"col-12 col-md-4 m-1\">\n                            <RenderComments comments={this.props.comments}\n                                commentsErrMess={this.props.commentsErrMess}\n                                postComment={this.props.postComment}\n                                courseId={this.props.course._id}\n                            />\n                        </div>\n                        <div className=\"col-12 col-md-2 m-1\">\n                            <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Book a slot</Button>\n                            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                                <ModalHeader toggle={this.toggleModal}>Book a slot</ModalHeader>\n                                <ModalBody>\n                                    <Form  model=\"bookSlot\" onSubmit={(values) => this.handleSubmit(values)}>\n                                        <Row className=\"form-group\" >\n                                            <Label htmlFor=\"name\" md={2}>Name</Label>\n                                            <Col md={10}>\n                                                <Control.text model=\".name\" id=\"name\" name=\"name\"\n                                                    placeholder=\"Name\"\n                                                    className=\"form-control\"\n                                                    validators={{\n                                                        required, minLength: minLength(3), maxLength: maxLength(15)\n                                                    }}\n                                                    innerRef={(input) => this.name = input}\n                                                />\n\n                                                <Errors\n                                                    className=\"text-danger\"\n                                                    model=\".name\"\n                                                    show=\"touched\"\n                                                    messages={{\n                                                        required: 'Required. ',\n                                                        minLength: 'Must be greater than 2 characters. ',\n                                                        maxLength: 'Must be 15 characters or less. '\n                                                    }}\n                                                />\n\n                                            </Col>\n                                        </Row>\n                                        \n                                        <Row className=\"form-group\">\n                                            <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                            <Col md={10}>\n                                                <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                                    placeholder=\"Tel. number\"\n                                                    className=\"form-control\"\n                                                    validators={{\n                                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                                    }}\n                                                    innerRef={(input) => this.telnum = input}\n                                                />\n                                                <Errors\n                                                    className=\"text-danger\"\n                                                    model=\".telnum\"\n                                                    show=\"touched\"\n                                                    messages={{\n                                                        required: 'Required. ',\n                                                        minLength: 'Must be greater than 2 numbers. ',\n                                                        maxLength: 'Must be 15 numbers or less. ',\n                                                        isNumber: 'Must be numbers only. '\n                                                    }}\n                                                />\n\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"form-group\">\n                                            <Label htmlFor=\"email\" md={2}>Email</Label>\n                                            <Col md={10}>\n                                                <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                                    placeholder=\"Email\"\n                                                    className=\"form-control\"\n                                                    validators={{\n                                                        required, validEmail\n                                                    }}\n                                                    innerRef={(input) => this.email = input}\n                                                />\n\n                                                <Errors\n                                                    className=\"text-danger\"\n                                                    model=\".email\"\n                                                    show=\"touched\"\n                                                    messages={{\n                                                        required: 'Required. ',\n                                                        validEmail: 'Must be valid email. '\n                                                    }}\n                                                />\n\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"form-group\">\n                                            <Label htmlFor=\"message\" md={2}>When are you available?</Label>\n                                            <Col md={10}>\n                                                <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                                    rows=\"12\"\n                                                    className=\"form-control\" \n                                                    innerRef={(input) => this.message = input}/>\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"form-group\">\n                                            <Col md={{ size: 10, offset: 2 }}>\n                                                <Button type=\"submit\" color=\"primary\">\n                                                    Submit\n                                                </Button>\n                                            </Col>\n                                        </Row>\n                                    </Form>\n                                </ModalBody>\n                            </Modal>\n                        </div>\n                    </div>\n\n                </div>\n            )\n        }\n    }\n\n}\n\n\n\n\n\n\nexport default CourseDetail;","export const ADD_COURSES = 'ADD_COURSES';\nexport const COURSES_LOADING = 'COURSES_LOADING';\nexport const COURSES_FAILED = 'COURSES_FAILED';\nexport const ADD_TEACHERS = 'ADD_TEACHERS';\nexport const TEACHERS_LOADING = 'TEACHERS_LOADING';\nexport const TEACHERS_FAILED = 'TEACHERS_FAILED';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';","import { config } from './config';\nimport firebase from 'firebase';\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\n\nexport const fireauth = firebase.auth;\n\nconst settings = {timestampsInSnapshots: true};\nfirebase.firestore().settings(settings);\nexport const firestore = firebase.firestore();\n\nexport const firebasestore = firebase.firestore;","export const config = {\n\n  databaseURL: \"https://firebasestorage.googleapis.com/v0/b/codecoach-c4fe8.appspot.com\",\n\n  apiKey: \"AIzaSyBH2tZ2o9j_kbrF6oDG-qx6uCRjv0UNpSI\",\n  authDomain: \"codecoach-c4fe8.firebaseapp.com\",\n  projectId: \"codecoach-c4fe8\",\n  storageBucket: \"codecoach-c4fe8.appspot.com\",\n  messagingSenderId: \"182523003955\",\n  appId: \"1:182523003955:web:fb46495751704b959d0f46\",\n  measurementId: \"G-K37GWYQ8EN\"\n};\n","import * as ActionTypes from './ActionTypes';\nimport { auth, firestore, fireauth, firebasestore } from '../firebase/firebase';\n\n\nexport const fetchCourses = () => (dispatch) => {\n  dispatch(coursesLoading(true));\n\n  return firestore.collection('courses').get()\n      .then(snapshot => {\n          let courses = [];\n          snapshot.forEach(doc => {\n              const data = doc.data()\n              const _id = doc.id\n              courses.push({_id, ...data });\n          });\n          return courses;\n      })\n      .then(courses => dispatch(addCourses(courses)))\n      .catch(error => dispatch(coursesFailed(error.message)));\n}\n\nexport const coursesLoading = () => ({\n    type: ActionTypes.COURSES_LOADING\n});\n\nexport const coursesFailed = (errmess) => ({\n    type: ActionTypes.COURSES_FAILED,\n    payload: errmess\n});\n\nexport const addCourses = (courses) => ({\n    type: ActionTypes.ADD_COURSES,\n    payload: courses\n});\n\n//teachers\n\nexport const fetchTeachers = () => (dispatch) => {\n    \n  dispatch(teachersLoading());\n\n  return firestore.collection('teachers').get()\n  .then(snapshot => {\n      let teachers = [];\n      snapshot.forEach(doc => {\n          const data = doc.data()\n          const _id = doc.id\n          teachers.push({_id, ...data });\n      });\n      return teachers;\n  })\n  .then(teachers => dispatch(addTeachers(teachers)))\n  .catch(error => dispatch(teachersFailed(error.message)));\n}\n\nexport const teachersLoading = () => ({\n    type: ActionTypes.TEACHERS_LOADING\n});\n\nexport const teachersFailed = (errmess) => ({\n    type: ActionTypes.TEACHERS_FAILED,\n    payload: errmess\n});\n\nexport const addTeachers = (teachers) => ({\n    type: ActionTypes.ADD_TEACHERS,\n    payload: teachers\n});\n\n//comments\n\nexport const fetchComments = () => (dispatch) => {\n  return firestore.collection('comments').get()\n      .then(snapshot => {\n          let comments = [];\n          snapshot.forEach(doc => {\n              const data = doc.data()\n              const _id = doc.id\n              comments.push({_id, ...data });\n          });\n          return comments;\n      })\n      .then(comments => dispatch(addComments(comments)))\n      .catch(error => dispatch(commentsFailed(error.message)));\n}\n\nexport const commentsFailed = (errmess) => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errmess\n});\n\nexport const addComments = (comments) => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\nexport const postComment = (courseId, rating, comment) => (dispatch) => {\n\n    if (!auth.currentUser) {\n        alert('Please log into your Google account to post a comment.');\n        return;\n    }\n\n    return firestore.collection('comments').add({\n        author: {\n            '_id': auth.currentUser.uid,\n            'firstname' : auth.currentUser.displayName ? auth.currentUser.displayName : auth.currentUser.email\n        },\n        course: courseId,\n        rating: rating,\n        comment: comment,\n        createdAt: firebasestore.FieldValue.serverTimestamp(),\n        updatedAt: firebasestore.FieldValue.serverTimestamp()\n    })\n    .then(docRef => {\n        firestore.collection('comments').doc(docRef.id).get()\n            .then(doc => {\n                if (doc.exists) {\n                    const data = doc.data();\n                    const _id = doc.id;\n                    let comment = {_id, ...data};\n                    dispatch(addComment(comment))\n                } else {\n                    // doc.data() will be undefined in this case\n                    console.log(\"No such document!\");\n                }\n            });\n    })\n    .catch(error => { console.log('Post comments ', error.message);\n        alert('Your comment could not be posted\\nError: '+ error.message); })\n}\nexport const postFeedback = (feedback) => (dispatch) => {\n        \n  return firestore.collection('feedback').add(feedback)\n  .then(response => { console.log('Feedback', response); alert('Thank you for your feedback!'); })\n  .catch(error =>  { console.log('Feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\n};\n\nexport const postBookSlot = (bookSlot) => (dispatch) => {\n        \n  return firestore.collection('bookSlot').add(bookSlot)\n  .then(response => { console.log('bookSlot', response); alert('Your request has been submitted!'); })\n  .catch(error =>  { console.log('bookSlot', error.message); alert('Your request could not be submitted\\nError: '+error.message); });\n};\n\n\n//login stuff\n\nexport const requestLogin = () => {\n    return {\n        type: ActionTypes.LOGIN_REQUEST\n    }\n}\n  \nexport const receiveLogin = (user) => {\n    return {\n        type: ActionTypes.LOGIN_SUCCESS,\n        user\n    }\n}\n  \nexport const loginError = (message) => {\n    return {\n        type: ActionTypes.LOGIN_FAILURE,\n        message\n    }\n}\n\nexport const loginUser = (creds) => (dispatch) => {\n    // We dispatch requestLogin to kickoff the call to the API\n    dispatch(requestLogin(creds))\n\n    return auth.signInWithEmailAndPassword(creds.username, creds.password)\n    .then(() => {\n        var user = auth.currentUser;\n        localStorage.setItem('user', JSON.stringify(user));\n        // Dispatch the success action\n        dispatch(receiveLogin(user));\n    })\n    .catch(error => dispatch(loginError(error.message)))\n};\n\nexport const requestLogout = () => {\n    return {\n      type: ActionTypes.LOGOUT_REQUEST\n    }\n}\n  \nexport const receiveLogout = () => {\n    return {\n      type: ActionTypes.LOGOUT_SUCCESS\n    }\n}\n\n// Logs the user out\nexport const logoutUser = () => (dispatch) => {\n    dispatch(requestLogout())\n    auth.signOut().then(() => {\n        // Sign-out successful.\n      }).catch((error) => {\n        // An error happened.\n      });\n    localStorage.removeItem('user');\n    dispatch(receiveLogout())\n}\n\nexport const googleLogin = () => (dispatch) => {\n    const provider = new fireauth.GoogleAuthProvider();\n\n    auth.signInWithPopup(provider)\n        .then((result) => {\n            var user = result.user;\n            localStorage.setItem('user', JSON.stringify(user));\n            // Dispatch the success action\n            dispatch(receiveLogin(user));\n        })\n        .catch((error) => {\n            dispatch(loginError(error.message));\n        });\n}","import React, { Component } from 'react';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Course from './CourseComponent';\nimport Home from './HomeComponent';\nimport About from './AboutComponent';\nimport Contact from './ContactComponent';\nimport CourseDetail from './CoursedetailComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { actions } from 'react-redux-form';\nimport { postComment,loginUser, logoutUser,  googleLogin,postBookSlot,fetchTeachers, fetchCourses, fetchComments, postFeedback } from '../redux/ActionCreators';\n\n\n\n\n\n\n\nconst mapStateToProps = state => {\n    return {\n        courses: state.courses,\n        teachers: state.teachers,\n        comments: state.comments,\n        auth: state.auth\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    postComment: (courseId, rating, comment) => dispatch(postComment(courseId, rating, comment)),\n    fetchCourses: ()=>{dispatch(fetchCourses())},\n    fetchTeachers: () => {dispatch(fetchTeachers())},\n    fetchComments: ()=>{dispatch(fetchComments())},\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n    resetBookSlotForm: () => { dispatch(actions.reset('bookSlot'))},\n    postFeedback: (feedback) => dispatch(postFeedback(feedback)),\n    postBookSlot: (bookSlot) => dispatch(postBookSlot(bookSlot)),\n    loginUser: (creds) => dispatch(loginUser(creds)),\n    logoutUser: () => dispatch(logoutUser()),\n    googleLogin: () => dispatch(googleLogin())\n});\n\nclass Main extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        this.props.fetchCourses();\n        this.props.fetchTeachers();\n        this.props.fetchComments();\n    }\n    componentWillUnmount() {\n        this.props.logoutUser();\n      }\n\n    render() {\n        const HomePage = () => {\n            return (\n                <Home\n                    course={this.props.courses.courses.filter((course)=>course.featured)}\n                    courseLoading = {this.props.courses.isLoading}\n                    courseErrMess={this.props.courses.errMess}\n                />\n            );\n        }\n        const CourseWithId = ({match}) => {\n            return(\n              (this.props.auth.isAuthenticated)\n              ?\n              <CourseDetail course={this.props.courses.courses.filter((course) => course._id === match.params.courseId)[0]}\n                isLoading={this.props.courses.isLoading}\n                errMess={this.props.courses.errMess}\n                comments={this.props.comments.comments.filter((comment) => comment.course === match.params.courseId)}\n                commentsErrMess={this.props.comments.errMess}\n                postComment={this.props.postComment}\n                \n                />\n              :\n              <CourseDetail course={this.props.courses.courses.filter((course) => course._id === match.params.courseId)[0]}\n                isLoading={this.props.courses.isLoading}\n                errMess={this.props.courses.errMess}\n                comments={this.props.comments.comments.filter((comment) => comment.course === match.params.courseId)}\n                commentsErrMess={this.props.comments.errMess}\n                postComment={this.props.postComment}\n              \n                />\n            );\n          }\n\n\n        return (\n            <div>\n                 <Header auth={this.props.auth} \n                    loginUser={this.props.loginUser} \n                    logoutUser={this.props.logoutUser}\n                    googleLogin={this.props.googleLogin}\n                />   \n                        <Switch>\n                            <Route path='/home' component={HomePage} />\n                            <Route path='/aboutus' component={() => <About teachers={this.props.teachers} />} />\n                            <Route exact path='/courses' component={() => <Course courses={this.props.courses} />} />\n                            <Route path='/courses/:courseId' component={CourseWithId} />\n                            <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>} />\n                            <Redirect to='/home' />\n                        </Switch>       \n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\n\n\nexport const Courses = (state = { isLoading: true,\n    errMess: null,\n    courses:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COURSES:\n            return {...state, isLoading: false, errMess: null, courses: action.payload};\n\n        case ActionTypes.COURSES_LOADING:\n            return {...state, isLoading: true, errMess: null, courses: []}\n\n        case ActionTypes.COURSES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","\nimport * as ActionTypes from './ActionTypes';\n\n\nexport const Teachers = (state = { isLoading: true,\n    errMess: null,\n    teachers:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_TEACHERS:\n            return {...state, isLoading: false, errMess: null, teachers: action.payload};\n\n        case ActionTypes.TEACHERS_LOADING:\n            return {...state, isLoading: true, errMess: null, teachers: []}\n\n        case ActionTypes.TEACHERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};\n\n","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n        errMess: null,\n        comments: []\n    }, action) => {\n    switch(action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload, comments: []};\n\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return {...state, comments: state.comments.concat(comment)};\n\n        default:\n            return state;\n    }\n}","export const InitialBookSlot = {\n    name: '',\n    telnum: '',\n    email: '',\n    message: ''\n};\n\n\n\n","import * as ActionTypes from './ActionTypes';\n\n// The auth reducer. The starting state sets authentication\n// based on a token being in local storage. In a real app,\n// we would also want a util to check if the token is expired.\nexport const Auth = (state = {\n        isLoading: false,\n        isAuthenticated: false,\n        user: null,\n        errMess: null\n    }, action) => {\n    switch (action.type) {\n        case ActionTypes.LOGIN_REQUEST:\n            return {...state,\n                isLoading: true,\n                isAuthenticated: false,\n            };\n        case ActionTypes.LOGIN_SUCCESS:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: true,\n                errMess: '',\n                user: action.user\n            };\n        case ActionTypes.LOGIN_FAILURE:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: false,\n                errMess: action.message\n            };\n        case ActionTypes.LOGOUT_REQUEST:\n            return {...state,\n                isLoading: true,\n                isAuthenticated: true\n            };\n        case ActionTypes.LOGOUT_SUCCESS:\n            return {...state,\n                isLoading: false,\n                isAuthenticated: false,\n                token: '',\n                user: null\n            };\n        default:\n            return state\n    }\n}","import React, { Component } from 'react'\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\nclass App extends Component {\n\n\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n\n    );\n  }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport { createForms } from 'react-redux-form';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport {Courses} from './courses'\nimport {Teachers} from './teachers'\nimport { InitialFeedback } from './forms';\nimport { Comments } from './comments';\nimport { InitialBookSlot } from './bookSlot';\nimport { Auth } from './auth';\n\n\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            courses: Courses,\n            teachers: Teachers,\n            comments: Comments,\n            auth: Auth,\n            ...createForms({\n                feedback: InitialFeedback,\n                bookSlot: InitialBookSlot\n            }),\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}